name: Deploy Reading Tracker with azd

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Allow GITHUB_TOKEN to deploy to GitHub Pages and Azure OIDC authentication
permissions:
  contents: read
  pages: write
  id-token: write

env:
  AZURE_ENV_NAME: reading-tracker-prod
  AZURE_LOCATION: eastus

concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  # Deploy Azure backend using azd
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      api_uri: ${{ steps.deploy.outputs.api_uri }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Azure Developer CLI
      run: |
        curl -fsSL https://aka.ms/install-azd.sh | bash
        echo "$HOME/.azd/bin" >> $GITHUB_PATH
        
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Configure azd environment
      run: |
        # Create or select environment
        azd env new $AZURE_ENV_NAME --location $AZURE_LOCATION --no-prompt || true
        azd env select $AZURE_ENV_NAME
        
        # Set environment variables
        azd env set AZURE_OPENAI_ENDPOINT "${{ secrets.AZURE_OPENAI_ENDPOINT }}"
        azd env set AZURE_OPENAI_API_KEY "${{ secrets.AZURE_OPENAI_API_KEY }}"
        azd env set AZURE_OPENAI_DEPLOYMENT_NAME "${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}"
        
    - name: Preview deployment changes
      run: azd provision --preview --no-prompt
      
    - name: Deploy with azd
      id: deploy
      run: |
        azd up --no-prompt
        # Get the API URL from environment values
        API_URI=$(azd env get-values --output json | jq -r '.API_URI // empty')
        echo "api_uri=$API_URI" >> $GITHUB_OUTPUT
        echo "Deployed API to: $API_URI"

  # Deploy frontend to GitHub Pages  
  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Update frontend configuration
      if: needs.deploy-backend.outputs.api_uri != ''
      run: |
        # Update script.js with the actual API URL from deployment
        API_URL="${{ needs.deploy-backend.outputs.api_uri }}"
        echo "Updating frontend to use API: $API_URL"
        sed -i "s|const API_BASE = '.*';|const API_BASE = '$API_URL';|" script.js || true
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
